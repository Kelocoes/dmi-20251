(()=>{"use strict";var t={156:function(t,e,s){var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const a=n(s(824)),i=n(s(823));customElements.define("rick-list",i.default),customElements.define("custom-card",a.default)},823:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class s extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}async connectedCallback(){try{const t=await fetch("../src/assets/rick.json"),e=(await t.json()).characters,s=await fetch("../src/layouts/RickList/RickList.css"),n=await s.text();this.shadowRoot&&(this.shadowRoot.innerHTML=`\n                <style>\n                ${n}\n                </style>\n                <ul>\n                ${e.map((t=>`\n                    <custom-card class="char" id="${t.id}" name="${t.name}" status="${t.status}" species="${t.species}" image="${t.image}"></custom-card>\n                `)).join("")}\n                </ul>\n                }`)}catch(t){console.error(t)}}}e.default=s},824:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class s extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get observedAttributes(){return["id","name","status","image"]}connectedCallback(){this.render()}render(){this.shadowRoot&&(this.shadowRoot.innerHTML=`\n                <style>\n                    div {\n                        border: 1px solid #ccc;\n                        border-radius: 8px;\n                        padding: 16px;\n                        margin: 10px;\n                        text-align: center;\n                        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n                    }\n                    p {\n                        margin: 8px 0;\n                        font-family: Arial, sans-serif;\n                    }\n                    img {\n                        max-width: 100%;\n                        border-radius: 8px;\n                    }\n                </style>\n                <div>\n                    <p>ID: ${this.getAttribute("id")}</p>\n                    <p>Name: ${this.getAttribute("name")}</p>\n                    <p>Status: ${this.getAttribute("status")}</p>\n                    <img src="${this.getAttribute("image")}" alt="${this.getAttribute("name")}">\n                </div>\n            `)}}e.default=s}},e={};!function s(n){var a=e[n];if(void 0!==a)return a.exports;var i=e[n]={exports:{}};return t[n].call(i.exports,i,i.exports,s),i.exports}(156)})();